name: Build WASM and Deploy to Pages

on:
  # Trigger manually
  workflow_dispatch:
  
  # Trigger on push to main branch (for demo repo changes)
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout demo repo
      uses: actions/checkout@v4
      with:
        path: demo

    - name: Clone main teanga.rs repo
      run: |
        git clone https://github.com/alamgirqazi/teanga.rs.git teanga-source
        
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true

    - name: Install wasm-pack
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Copy teanga-wasm source
      run: |
        # Copy all files from teanga-wasm to demo
        rsync -av --exclude='.git' teanga-source/teanga-wasm/ demo/
        
        # Copy the teanga core library dependency
        cp -r teanga-source/teanga demo/
        
        # Debug: Check what got copied
        echo "=== Demo directory after copying ==="
        ls -la demo/
        echo "=== Looking for Cargo files ==="
        find demo -name "*argo*" -type f

    - name: Fix Cargo.toml case
      run: |
        cd demo
        # wasm-pack expects Cargo.toml (uppercase), but repo has cargo.toml (lowercase)
        if [ -f cargo.toml ]; then
          echo "Found cargo.toml (lowercase), renaming to Cargo.toml"
          mv cargo.toml Cargo.toml
        fi
        
        # Verify we have the right file
        if [ -f Cargo.toml ]; then
          echo "‚úÖ Cargo.toml ready for build"
          head -5 Cargo.toml
        else
          echo "‚ùå Still no Cargo.toml file!"
          exit 1
        fi

    - name: Build WASM
      run: |
        cd demo
        wasm-pack build --target web --out-dir pkg --dev

    - name: Clean up build files
      run: |
        cd demo
        # Remove source files, keep only built assets and index.html
        rm -rf src/
        rm -rf teanga/
        rm -f Cargo.toml Cargo.lock cargo.toml
        rm -f build-wasm.sh build.sh
        rm -f readme.md README.md

    - name: List final structure
      run: |
        echo "Final demo directory structure:"
        find demo -type f | head -20

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './demo'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Output deployment URL
      run: |
        echo "üöÄ Deployed to: ${{ steps.deployment.outputs.page_url }}"